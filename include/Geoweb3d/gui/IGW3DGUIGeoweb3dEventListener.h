//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2023, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include "core/GW3DGUIInterFace.h"

/* Primary namespace */
namespace Geoweb3d
{
namespace GUI
{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A listener for events occurring with vector layers. </summary>
	///
	/// <remarks>	This interface is implemented by the plugin, and is registered with
	/// 			Geoweb3d via IGW3DGUIGeoweb3dEventContext::put_VectorLayerEventListener. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUIGeoweb3dVectorLayerEventListener
	{
		
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a vector layer is created. </summary>
		///
		/// <param name="layer">	The layer. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnCreated (IGW3DGUIVectorLayerWPtr layer) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a vector layer is created. </summary>
		///
		/// <param name="layer">	The layer. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnDestroyed (IGW3DGUIVectorLayerWPtr layer) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a vector layer is created. </summary>
		///
		/// <param name="layer">	The layer. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnEnabled (IGW3DGUIVectorLayerWPtr layer) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a vector layer is created. </summary>
		///
		/// <param name="layer">	The layer. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnDisabled (IGW3DGUIVectorLayerWPtr layer) = 0;

	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A listener for events occurring with vector representations. </summary>
	///
	/// <remarks>	This interface is inherited by the developer's class, which is registered with
	/// 			Geoweb3d via IGW3DGUIGeoweb3dEventContext::put_VectorRepresentationEventListener. 
	/// 			</remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUIGeoweb3dVectorRepresentationEventListener
	{
		
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an representation is created. </summary>
		///
		/// <param name="representation">	The representation. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnCreated (IGW3DGUIVectorRepresentationWPtr representation) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an representation is destroyed. </summary>
		///
		/// <param name="representation">	The representation. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnDestroyed (IGW3DGUIVectorRepresentationWPtr representation) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an representation is enabled. </summary>
		///
		/// <param name="representation">	The representation. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnEnabled (IGW3DGUIVectorRepresentationWPtr representation) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an representation is disabled. </summary>
		///
		/// <param name="representation">	The representation. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnDisabled (IGW3DGUIVectorRepresentationWPtr representation) = 0;

	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A listener for events occurring with attribute maps. </summary>
	///
	/// <remarks>	This interface is inherited by the developer's class, which is registered with
	/// 			Geoweb3d via IGW3DGUIGeoweb3dEventContext::put_AttributeMapEventListener. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUIGeoweb3dAttributeMapEventListener
	{
		
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an attribute map is created. </summary>
		///
		/// <param name="attributeMap">	The attribute map. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnCreated (IGW3DGUIAttributeMapWPtr attributeMap) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an attribute map is destroyed. </summary>
		///
		/// <param name="attributeMap">	The attribute map. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnDestroyed (IGW3DGUIAttributeMapWPtr attributeMap) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an attribute map is enabled. </summary>
		///
		/// <param name="attributeMap">	The attribute map. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnEnabled (IGW3DGUIAttributeMapWPtr attributeMap) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when an attribute map is disabled. </summary>
		///
		/// <param name="attributeMap">	The attribute map. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnDisabled (IGW3DGUIAttributeMapWPtr attributeMap) = 0;

	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A listener for events occurring with table of contents (TOC) items. </summary>
	///
	/// <remarks>	This interface is inherited by the developer's class, which is registered with
	/// 			Geoweb3d via IGW3DGUIGeoweb3dEventContext::put_TocItemEventListener. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUIGeoweb3dTocItemEventListener
	{
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a table of contents item becomes the current. </summary>
		///
		/// <param name="item">	The current table of contents item, or an expired pointer if none. </param>
		/// <param name="previous">	The previous current item, or an expired pointer if none. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnCurrent (IGW3DGUITocItemWPtr item, IGW3DGUITocItemWPtr previous) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a table of contents item becomes checked. </summary>
		///
		/// <param name="item">	The table of contents item. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnChecked (IGW3DGUITocItemWPtr item) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Callback when a table of contents item becomes unchecked. </summary>
		///
		/// <param name="item">	The table of contents item. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void OnUnchecked (IGW3DGUITocItemWPtr item) = 0;

	};

}
}



