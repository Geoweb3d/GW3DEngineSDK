//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2023, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include "core/GW3DGUIInterFace.h"
#include <Geoweb3dCore/GW3DResults.h>

/* Primary namespace */
namespace Geoweb3d
{
namespace GUI
{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A shelf at the top of the Geoweb3d user interface. </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUIShelf 
	{

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the name. </summary>
		///
		/// <returns>	null if it fails, else the name. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual const char * get_Name() const = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the unique id of the shelf. </summary>
		///
		/// <returns>	null if it fails, else the id. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual const char * get_Id() const = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets frame collection. </summary>
		///
		/// <remarks>	Gets the collection of all frames that belong to this shelf. </remarks>
		///
		/// <returns>	null if it fails, else the frame collection. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual IGW3DGUIFrameCollection* get_FrameCollection() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Make the shelf visible or non-visible. </summary>
		///
		/// <param name="visible">	true to show, false to hide. </param>
		///
		/// <returns> TODO </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual Geoweb3d::GW3DResult put_Visible( bool visible ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the visibility. </summary>
		///
		/// <returns>	true if visible, false if non-visible. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual bool get_Visible( ) const = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Forces the shelf to redraw. </summary>
		///
		/// <remarks>	Forces the shelf to redraw itself.  This is required only when modifying the
		/// 			shelf's frames (i.e. creating, hiding, or unhiding a frame) while the shelf
		/// 			is active.</remarks>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void redraw( ) = 0;

	};

}
}



