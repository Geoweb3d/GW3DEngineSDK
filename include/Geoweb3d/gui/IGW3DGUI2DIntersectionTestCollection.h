//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2023, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include "core/GW3DGUIInterFace.h"

/* Primary namespace */
namespace Geoweb3d
{
namespace GUI
{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	A subset of the intersection test containing just those test with results in the 
	/// 			previously drawn frame </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUI2DIntersectionTestResultsCollection: public IGW3DCollection< IGW3DGUI2DIntersectionTestWPtr >
	{
	
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Collection of  2D intersection tests. </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUI2DIntersectionTestCollection: public IGW3DCollection< IGW3DGUI2DIntersectionTestWPtr >
	{

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Create a new 2D intersection test. </summary>
		///
		/// <returns>	A new intersection test. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual IGW3DGUI2DIntersectionTestWPtr create() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	A global way to enable/disable all the 2D intersection tests. </summary>
		///
		/// <param name="enable">	true to enable, false to disable. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual void put_EnableAll( bool enable ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets intersection results for the previously drawn frame. </summary>
		///
		/// <returns>	null if it fails, else the intersection results. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual IGW3DGUI2DIntersectionTestResultsCollection * get_IntersectionResultsCollection() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Closes the given test. </summary>
		///
		/// <param name="ltest">	The test. </param>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		static void close( IGW3DGUI2DIntersectionTestWPtr ltest  )
		{
			//todo
		}

		
	};

}
}