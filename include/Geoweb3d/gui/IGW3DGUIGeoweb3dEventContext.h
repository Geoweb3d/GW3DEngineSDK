//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2023, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include "core/GW3DGUIInterFace.h"
#include <Geoweb3dCore/GW3DResults.h>

/* Primary namespace */
namespace Geoweb3d
{
namespace GUI
{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	This context reports certain events that occur in Geoweb3d Desktop. </summary>
	///
	/// <remarks>	When certain events occur relating to layers, representations, and attribute maps, these. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct IGW3DGUIGeoweb3dEventContext
	{

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Set the vector layer event listener. </summary>
		///
		/// <param name="listener">	The listener. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_VectorLayerEventListener ( IGW3DGUIGeoweb3dVectorLayerEventListener* listener ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Set the vector representation event listener. </summary>
		///
		/// <param name="listener">	The listener. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_VectorRepresentationEventListener ( IGW3DGUIGeoweb3dVectorRepresentationEventListener* listener ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Set the attribute map event listener. </summary>
		///
		/// <param name="listener">	The listener. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_AttributeMapEventListener ( IGW3DGUIGeoweb3dAttributeMapEventListener* listener ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Set the table of contents item event listener. </summary>
		///
		/// <param name="listener">	The listener. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_TocItemEventListener ( IGW3DGUIGeoweb3dTocItemEventListener* listener ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Set the table of contents item event filter. </summary>
		///
		/// <param name="filter">	The filter. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_TocItemEventFilter ( IGW3DGUIGeoweb3dTocItemEventFilter* filter ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Set the context menu event filter. </summary>
		///
		/// <param name="filter">	The filter. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_ContextMenuEventFilter ( IGW3DGUIGeoweb3dContextMenuEventFilter* filter ) = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Sets the dialog event filter. </summary>
		///
		/// <param name="filter">	The filter. </param>
		///
		/// <returns>	GW3D_sOk if succeeded. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult put_DialogEventFilter ( IGW3DGUIGeoweb3dDialogEventFilter* filter ) = 0;

	};

}
}



