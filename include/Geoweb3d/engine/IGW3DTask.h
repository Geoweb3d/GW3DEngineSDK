//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2023, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include "../core/GW3DInterFace.h"

/* Primary namespace */
namespace Geoweb3d
{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Generic task interface. </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct  GW3D_DLL IGW3DTask
	{
		virtual ~IGW3DTask() {}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Gets the status of the task. </summary>
		///
		/// <remarks>	Gets the task status, i.e. if the task is complete, pending, canceled, of in an
		/// 			error state. </remarks>
		///
		/// <returns>	The task status. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult get_Status() const = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Force Completion </summary>
		///
		/// <remarks>	Forces synchronous execution on this calling thread, and return the resultant status code. </remarks>
		///
		/// <returns>	The task status. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult force_Completion() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Cancels any pending work on this task. </summary>
		///
		/// <remarks>	If work is already complete this call will do nothing and 
		/// basically just return the current status.  Expect a status code of GW3D_sCanceled
		/// if pending work was indeed canceled. </remarks>
		///
		/// <returns>	The task status. </returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual GW3DResult cancel() = 0;
	};

}