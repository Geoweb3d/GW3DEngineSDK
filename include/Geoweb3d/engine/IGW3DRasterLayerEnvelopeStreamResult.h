//////////////////////////////////////////////////////////////////////////////
//
// Geoweb3d SDK
// Copyright (c) Geoweb3d, 2008-2023, all rights reserved.
//
// This code can be used only under the rights granted to you by the specific
// Geoweb3d SDK license under which the SDK provided.
//
//////////////////////////////////////////////////////////////////////////////

#pragma once
#include  "../core/GW3DInterFace.h"

namespace Geoweb3d
{
	struct  GW3D_DLL IGW3DImage;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary> TODO </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	struct  GW3D_DLL IGW3DRasterLayerEnvelopeStreamResult
	{
		virtual ~IGW3DRasterLayerEnvelopeStreamResult() {}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Contains the stream result in the form of an image. </summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual const IGW3DImage* get_Image() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Contains the stream result in the form of an image. </summary>
		///
		/// <remarks>	Buffer memory should be released when not being used. </remarks>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual IGW3DImagePtr get_OwnershipOfImage() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Get whether this call back stream object is triggered on a background thread.  </summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual bool get_IsAsynchronous() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Get the Raster layer dimension value. 
		///				Depending on which Raster Controller was used this value 
		///				will coincide with the dimension value. 
		///				(i.e. IGW3DRasterTimeController) </summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual unsigned long  get_ID() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Get Initializing will be true when the async stream is first configuring itself.
		/// 			Here is an opportunity for client to request get_AsyncStatus on the same thread that 
		/// 			is calling StreamEnvelopeAsync(). </summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual bool get_Initializing() = 0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>	Get the IGW3DAsyncStatus Object to monitor the async status 
		///				Also has the ability to cancel the action. </summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		virtual IGW3DAsyncStatusWPtr get_AsyncStatus() = 0;

	};
}